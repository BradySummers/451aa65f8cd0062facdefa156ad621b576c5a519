{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../data.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nclass NewBoardComponent {\n  constructor(dialogRef, dataService, boardFields) {\n    this.dialogRef = dialogRef;\n    this.dataService = dataService;\n    this.boardFields = boardFields;\n    this.Object = [];\n    this.Drawing = [];\n    this.Update = [];\n    this.Hardware = [];\n    this.CommentBoard = [];\n    this.boardName = \"\";\n    this.drawNumber = \"\";\n    this.boardFields = [];\n  }\n  openBoard() {\n    let index = this.dataService.data.boards.length;\n    let boardindex = this.dataService.data.boards.length;\n    let newBoard = {\n      index: index,\n      boardName: {\n        label: 'Board Name',\n        model: this.boardName,\n        placeholder: '',\n        disabled: false\n      },\n      drawNumber: {\n        label: 'Drawing Number',\n        model: this.drawNumber,\n        placeholder: '',\n        disabled: false\n      },\n      updateRate: {\n        label: 'Update Rate',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      hardware: {\n        label: 'Hardware Version',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      comment: {\n        label: 'Comment',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      variables: [],\n      disabled: false\n    };\n    if (this.boardFields.length > 0) {\n      const boardName = this.boardFields[boardindex].boardName.model;\n      const jsonData = JSON.stringify({\n        boardName\n      });\n      localStorage.setItem('boarddata', jsonData);\n      console.log('Saved username:', boardName);\n    }\n    console.log('something');\n    this.dataService.data.boards.push(newBoard);\n    this.boardFields.push(newBoard);\n    this.dialogRef.close();\n  }\n}\nNewBoardComponent.ɵfac = function NewBoardComponent_Factory(t) {\n  return new (t || NewBoardComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n};\nNewBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewBoardComponent,\n  selectors: [[\"app-new-board\"]],\n  inputs: {\n    Object: \"Object\",\n    Drawing: \"Drawing\",\n    Update: \"Update\",\n    Hardware: \"Hardware\",\n    CommentBoard: \"CommentBoard\",\n    boardName: \"boardName\",\n    drawNumber: \"drawNumber\"\n  },\n  decls: 31,\n  vars: 1,\n  consts: [[1, \"row\"], [1, \"col\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"name\", \"boardName\", \"placeholder\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"Drawing\", \"\"], [\"matInput\", \"\", \"Update\", \"\"], [\"matInput\", \"\", \"Hardware\", \"\"], [\"matInput\", \"\"], [3, \"click\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\"]],\n  template: function NewBoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"mat-form-field\", 2)(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Board Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function NewBoardComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.boardName = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"mat-form-field\", 2)(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Drawing Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 1)(12, \"mat-form-field\", 2)(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Update Rate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 1)(17, \"mat-form-field\", 2)(18, \"mat-label\");\n      i0.ɵɵtext(19, \"Hardware Version\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 1)(22, \"mat-form-field\")(23, \"mat-label\");\n      i0.ɵɵtext(24, \"Comment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"textarea\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"mat-dialog-actions\")(27, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function NewBoardComponent_Template_button_click_27_listener() {\n        return ctx.openBoard();\n      });\n      i0.ɵɵtext(28, \"Open Board\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"button\", 9);\n      i0.ɵɵtext(30, \"Cancel\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.boardName);\n    }\n  },\n  dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i1.MatDialogClose, i1.MatDialogActions, i4.MatFormField, i4.MatLabel, i5.MatInput],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { NewBoardComponent };","map":{"version":3,"names":["MAT_DIALOG_DATA","NewBoardComponent","constructor","dialogRef","dataService","boardFields","Object","Drawing","Update","Hardware","CommentBoard","boardName","drawNumber","openBoard","index","data","boards","length","boardindex","newBoard","label","model","placeholder","disabled","updateRate","hardware","comment","variables","jsonData","JSON","stringify","localStorage","setItem","console","log","push","close","i0","ɵɵdirectiveInject","i1","MatDialogRef","i2","DataService","selectors","inputs","decls","vars","consts","template","NewBoardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","NewBoardComponent_Template_input_ngModelChange_5_listener","$event","ɵɵelement","NewBoardComponent_Template_button_click_27_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\summersb\\Desktop\\Brainboard_Web_App\\ICD_Webtool\\src\\app\\new-board\\new-board.component.ts","C:\\Users\\summersb\\Desktop\\Brainboard_Web_App\\ICD_Webtool\\src\\app\\new-board\\new-board.component.html"],"sourcesContent":["import { Component, Input, Inject, importProvidersFrom } from '@angular/core';\nimport { DataService, IBoardObject } from '../data.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { HomeComponent } from '../home/home.component';\n\n@Component({\n  selector: 'app-new-board',\n  templateUrl: './new-board.component.html',\n  styleUrls: ['./new-board.component.css'],\n})\nexport class NewBoardComponent {\n  @Input() Object: string[] = [];\n  @Input() Drawing: string[] = [];\n  @Input() Update: string[] = [];\n  @Input() Hardware: string[] = [];\n  @Input() CommentBoard: string[] = [];\n  @Input() boardName: string = \"\";\n  @Input() drawNumber: string = \"\";\n\n  constructor(\n    public dialogRef: MatDialogRef<NewBoardComponent>,\n    public dataService: DataService,\n    @Inject(MAT_DIALOG_DATA) public boardFields: IBoardObject[]\n  ) {\n    this.boardFields = [];\n  }\n\n  openBoard() {\n    let index = this.dataService.data.boards.length;\n    let boardindex = this.dataService.data.boards.length;\n    let newBoard: IBoardObject = {\n      index: index,\n      boardName: {\n        label: 'Board Name',\n        model: this.boardName,\n        placeholder: '',\n        disabled: false\n      },\n      drawNumber: {\n        label: 'Drawing Number',\n        model: this.drawNumber,\n        placeholder: '',\n        disabled: false\n      },\n      updateRate: {\n        label: 'Update Rate',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      hardware: {\n        label: 'Hardware Version',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      comment: {\n        label: 'Comment',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      variables: [],\n      disabled: false\n    };\n    if (this.boardFields.length > 0) {\n      const boardName = this.boardFields[boardindex].boardName.model;\n      const jsonData: string = JSON.stringify({ boardName });\n      localStorage.setItem('boarddata', jsonData);\n      console.log('Saved username:', boardName);\n    }\n    console.log('something')\n    this.dataService.data.boards.push(newBoard)\n    this.boardFields.push(newBoard);\n    this.dialogRef.close();\n  }\n}\n","<div class=\"row\">\n    <div class=\"col\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Board Name</mat-label>\n            <input matInput [(ngModel)]=\"boardName\" name=\"boardName\" placeholder=\"\">\n        </mat-form-field>\n    </div>\n    <div class=\"col\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Drawing Number</mat-label>\n            <input matInput Drawing=\"\">\n        </mat-form-field>\n    </div>\n    <div class=\"col\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Update Rate</mat-label>\n            <input matInput Update=\"\">\n        </mat-form-field>\n    </div>\n    <div class=\"col\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Hardware Version</mat-label>\n            <input matInput Hardware=\"\">\n        </mat-form-field>\n    <div class=\"col\">\n        <mat-form-field>\n            <mat-label>Comment</mat-label>\n            <textarea matInput></textarea>\n        </mat-form-field>\n    </div>\n<mat-dialog-actions>\n    <button (click)=\"openBoard()\">Open Board</button>\n    <button mat-button mat-dialog-close>Cancel</button>\n  </mat-dialog-actions>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}