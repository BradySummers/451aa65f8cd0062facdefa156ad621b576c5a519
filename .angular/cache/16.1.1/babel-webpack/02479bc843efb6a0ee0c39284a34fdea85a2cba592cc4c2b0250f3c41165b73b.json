{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { SearchDialogComponent } from '../search-dialog/search-dialog.component';\nimport { NewBoardComponent } from '../new-board/new-board.component';\nlet HomeComponent = class HomeComponent {\n  disableProjectFields() {\n    for (let field of this.projectFields) {\n      field.username.disabled = true;\n      field.Job.disabled = true;\n      field.Manufacturer.disabled = true;\n      field.Aircraft.disabled = true;\n    }\n  }\n  constructor(dialog) {\n    this.dialog = dialog;\n    this.name = \"\";\n    this.Job = \"\";\n    this.Manufacturer = \"\";\n    this.Aircraft = \"\";\n    this.variableFields = [];\n    this.projectFields = [{\n      username: {\n        label: 'Username',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      Job: {\n        label: 'Job #',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      Manufacturer: {\n        label: 'Manufaturer',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      Aircraft: {\n        label: 'Aircraft Name',\n        model: '',\n        placeholder: '',\n        disabled: false\n      }\n    }];\n    this.boardFields = [];\n    this.isButtonVis = true;\n    this.isButtonVisible = true;\n    this.visible = false;\n    this.shouldRun = true;\n    this.isSidenavOpened = false;\n  }\n  toggleSidenav() {\n    this.isSidenavOpened = !this.isSidenavOpened;\n  }\n  openDialog() {\n    const dialogRef = this.dialog.open(SearchDialogComponent, {\n      width: '900px'\n    });\n    dialogRef.afterClosed().subscribe(result => {});\n  }\n  openAddNewBoard() {\n    const dialogRef = this.dialog.open(NewBoardComponent, {\n      width: '900px'\n    });\n    dialogRef.afterClosed().subscribe(result => {});\n  }\n  createBoard() {\n    this.boardFields.push({\n      boardName: {\n        label: 'Board Name',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      drawNumber: {\n        label: 'Drawing Number',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      updateRate: {\n        label: 'Update Rate',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      hardware: {\n        label: 'Hardware Version',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      comment: {\n        label: 'Comment',\n        model: '',\n        placeholder: '',\n        disabled: false\n      }\n    });\n    this.disableProjectFields();\n    this.isButtonVis = false;\n  }\n  createVariable() {\n    this.variableFields.push({\n      objectName: {\n        label: 'Object Name',\n        model: '',\n        placeholder: ''\n      },\n      drawingNumber: {\n        label: 'Drawing Number',\n        model: '',\n        placeholder: ''\n      },\n      direction: {\n        label: 'Direction',\n        model: ''\n      },\n      dataType: {\n        label: 'Data Type',\n        model: '',\n        placeholder: ''\n      },\n      size: {\n        label: 'Size',\n        model: '',\n        placeholder: ''\n      }\n    });\n    this.isButtonVisible = false;\n    this.visible = true;\n  }\n  addLines() {\n    this.variableFields.push({\n      objectName: {\n        label: 'Object Name',\n        model: '',\n        placeholder: ''\n      },\n      drawingNumber: {\n        label: 'Drawing Number',\n        model: '',\n        placeholder: ''\n      },\n      direction: {\n        label: 'Direction',\n        model: ''\n      },\n      dataType: {\n        label: 'Data Type',\n        model: '',\n        placeholder: ''\n      },\n      size: {\n        label: 'Size',\n        model: '',\n        placeholder: ''\n      }\n    });\n  }\n  clearFields() {\n    this.name = '';\n    this.Job = '';\n    this.Manufacturer = '';\n    this.Aircraft = '';\n    this.projectFields.forEach(field => {\n      field.username.model = '';\n      field.Job.model = '';\n      field.Manufacturer.model = '';\n      field.Aircraft.model = '';\n    });\n    this.variableFields.forEach(field => {\n      field.objectName.model = '';\n      field.drawingNumber.model = '';\n      field.direction.model = null;\n      field.dataType.model = '';\n      field.size.model = '';\n    });\n  }\n};\n__decorate([Input()], HomeComponent.prototype, \"name\", void 0);\n__decorate([Input()], HomeComponent.prototype, \"Job\", void 0);\n__decorate([Input()], HomeComponent.prototype, \"Manufacturer\", void 0);\n__decorate([Input()], HomeComponent.prototype, \"Aircraft\", void 0);\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"names":["Component","Input","SearchDialogComponent","NewBoardComponent","HomeComponent","disableProjectFields","field","projectFields","username","disabled","Job","Manufacturer","Aircraft","constructor","dialog","name","variableFields","label","model","placeholder","boardFields","isButtonVis","isButtonVisible","visible","shouldRun","isSidenavOpened","toggleSidenav","openDialog","dialogRef","open","width","afterClosed","subscribe","result","openAddNewBoard","createBoard","push","boardName","drawNumber","updateRate","hardware","comment","createVariable","objectName","drawingNumber","direction","dataType","size","addLines","clearFields","forEach","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\summersb\\Desktop\\Brainboard_Web_App\\ICD_Webtool\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { SearchDialogComponent } from '../search-dialog/search-dialog.component';\nimport { MatDialog } from '@angular/material/dialog'\nimport { NewBoardComponent } from '../new-board/new-board.component';\nimport { MatMenu } from '@angular/material/menu';\nimport { MatAnchor } from '@angular/material/button';\n\nexport interface ProjectObject{\n  username:{\n    label: string,\n    model: string,\n    placeholder: string,\n    disabled: boolean\n  }\n  Job: {\n    label: string,\n    model: string,\n    placeholder: string,\n    disabled: boolean\n  }\n  Manufacturer: {\n    label: string,\n    model: string,\n    placeholder: string,\n    disabled: boolean\n  }\n  Aircraft: {\n    label: string,\n    model: string,\n    placeholder: string,\n    disabled: boolean\n  }\n}\n\nexport interface BoardObject{\n  boardName:{\n    label: string,\n    model: string,\n    placeholder: string,\n    disabled: boolean\n  }\n  drawNumber: {\n    label: string,\n    model: string,\n    placeholder: string,\n    disabled: boolean\n  }\n  updateRate: {\n    label: string,\n    model: string,\n    placeholder: string,\n    disabled: boolean\n  }\n  hardware: {\n    label: string,\n    model: string,\n    placeholder: string,\n    disabled: boolean\n  }\n  comment: {\n    label: string,\n    model: string,\n    placeholder: string,\n    disabled: boolean\n  }\n}\n\nexport interface VariableObject {\n  objectName:{ \n    label: string,\n     model: string,\n      placeholder: string \n  },\n  drawingNumber:{\n    label: string,\n     model: string,\n      placeholder: string \n  },\n  direction:{\n    label:string;\n    model: any;\n  },\n  dataType:{ \n    label: string,\n     model: string,\n      placeholder: string \n  },\n  size:{ \n    label: string,\n     model: string,\n      placeholder: string \n  },\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n\n})\nexport class HomeComponent {\n  @Input() name = \"\";\n  @Input() Job= \"\";\n  @Input() Manufacturer= \"\";\n  @Input() Aircraft= \"\";\n  \n  disableProjectFields(): void {\n    for (let field of this.projectFields) {\n      field.username.disabled = true;\n      field.Job.disabled = true;\n      field.Manufacturer.disabled = true;\n      field.Aircraft.disabled = true;\n    }\n  }\n\n  variableFields: VariableObject[] = [\n   \n  ];\n  \n  projectFields: ProjectObject[] = [\n    {\n    username:{\n      label: 'Username',\n      model: '',\n      placeholder: '',\n      disabled: false\n    },\n    Job: {\n      label: 'Job #',\n      model: '',\n      placeholder: '',\n      disabled: false\n    },\n    Manufacturer: {\n      label: 'Manufaturer',\n      model: '',\n      placeholder: '',\n      disabled: false\n    },\n    Aircraft: {\n      label: 'Aircraft Name',\n      model: '',\n      placeholder: '',\n      disabled: false\n    }\n}]\nboardFields: BoardObject[] = [\n  ]\nisButtonVis: boolean = true;\nisButtonVisible: boolean = true;\nvisible: boolean = false;\n  constructor(public dialog: MatDialog) {}\n  shouldRun: boolean  = true;\n  isSidenavOpened: boolean = false;\n  toggleSidenav(): void {\n    this.isSidenavOpened = !this.isSidenavOpened;\n  }\n  openDialog(): void {\n\n    const dialogRef = this.dialog.open(SearchDialogComponent,\n      {\n        width: '900px'\n      });\n    dialogRef.afterClosed().subscribe((result: any) =>{\n    })\n  }\n  openAddNewBoard(): void {\n\n    const dialogRef = this.dialog.open(NewBoardComponent,\n      {\n        width: '900px'\n      });\n    dialogRef.afterClosed().subscribe((result: any) =>{\n    })\n  }\n  \n  createBoard(): void{\n    this.boardFields.push({\n      boardName:{\n        label: 'Board Name',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      drawNumber: {\n        label: 'Drawing Number',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      updateRate: {\n        label: 'Update Rate',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      hardware: {\n        label: 'Hardware Version',\n        model: '',\n        placeholder: '',\n        disabled: false\n      },\n      comment: {\n        label: 'Comment',\n        model: '',\n        placeholder: '',\n        disabled: false\n      }\n    })\n    this.disableProjectFields();\n    this.isButtonVis = false;\n  }\n  createVariable(): void{\n    this.variableFields.push({\n      objectName:{ \n        label: 'Object Name',\n         model: '',\n          placeholder: '' \n      },\n      drawingNumber:{\n         label: 'Drawing Number', \n         model: '', \n         placeholder: '' \n      },\n      direction:{\n        label: 'Direction',\n        model: ''\n      },\n      dataType:{ \n        label: 'Data Type', \n        model: '', \n        placeholder: '' \n      },\n      size:{ \n        label: 'Size', \n        model: '', \n        placeholder: '' \n      }\n    })\n    this.isButtonVisible = false;\n    this.visible = true;\n  }\n  addLines(): void{\n    this.variableFields.push({\n      objectName:{ \n        label: 'Object Name',\n         model: '',\n          placeholder: '' \n      },\n      drawingNumber:{\n         label: 'Drawing Number', \n         model: '', \n         placeholder: '' \n      },\n      direction:{\n        label: 'Direction',\n        model: ''\n      },\n      dataType:{ \n        label: 'Data Type', \n        model: '', \n        placeholder: '' \n      },\n      size:{ \n        label: 'Size', \n        model: '', \n        placeholder: '' \n      }\n    })\n    \n  }\n    clearFields(): void {\n      this.name = '';\n    this.Job = '';\n    this.Manufacturer = '';\n    this.Aircraft = '';\n\n    this.projectFields.forEach((field) => {\n      field.username.model = '';\n      field.Job.model = '';\n      field.Manufacturer.model = '';\n      field.Aircraft.model = '';\n    });\n\n    this.variableFields.forEach((field) => {\n      field.objectName.model = '';\n      field.drawingNumber.model = '';\n      field.direction.model = null;\n      field.dataType.model = '';\n      field.size.model = '';\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,eAAe;AAChD,SAASC,qBAAqB,QAAQ,0CAA0C;AAEhF,SAASC,iBAAiB,QAAQ,kCAAkC;AAiGpE,IAAaC,aAAa,GAA1B,MAAaA,aAAa;EAMxBC,oBAAoBA,CAAA;IAClB,KAAK,IAAIC,KAAK,IAAI,IAAI,CAACC,aAAa,EAAE;MACpCD,KAAK,CAACE,QAAQ,CAACC,QAAQ,GAAG,IAAI;MAC9BH,KAAK,CAACI,GAAG,CAACD,QAAQ,GAAG,IAAI;MACzBH,KAAK,CAACK,YAAY,CAACF,QAAQ,GAAG,IAAI;MAClCH,KAAK,CAACM,QAAQ,CAACH,QAAQ,GAAG,IAAI;;EAElC;EAsCAI,YAAmBC,MAAiB;IAAjB,KAAAA,MAAM,GAANA,MAAM;IAlDhB,KAAAC,IAAI,GAAG,EAAE;IACT,KAAAL,GAAG,GAAE,EAAE;IACP,KAAAC,YAAY,GAAE,EAAE;IAChB,KAAAC,QAAQ,GAAE,EAAE;IAWrB,KAAAI,cAAc,GAAqB,EAElC;IAED,KAAAT,aAAa,GAAoB,CAC/B;MACAC,QAAQ,EAAC;QACPS,KAAK,EAAE,UAAU;QACjBC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfV,QAAQ,EAAE;OACX;MACDC,GAAG,EAAE;QACHO,KAAK,EAAE,OAAO;QACdC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfV,QAAQ,EAAE;OACX;MACDE,YAAY,EAAE;QACZM,KAAK,EAAE,aAAa;QACpBC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfV,QAAQ,EAAE;OACX;MACDG,QAAQ,EAAE;QACRK,KAAK,EAAE,eAAe;QACtBC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfV,QAAQ,EAAE;;KAEf,CAAC;IACF,KAAAW,WAAW,GAAkB,EAC1B;IACH,KAAAC,WAAW,GAAY,IAAI;IAC3B,KAAAC,eAAe,GAAY,IAAI;IAC/B,KAAAC,OAAO,GAAY,KAAK;IAEtB,KAAAC,SAAS,GAAa,IAAI;IAC1B,KAAAC,eAAe,GAAY,KAAK;EAFO;EAGvCC,aAAaA,CAAA;IACX,IAAI,CAACD,eAAe,GAAG,CAAC,IAAI,CAACA,eAAe;EAC9C;EACAE,UAAUA,CAAA;IAER,MAAMC,SAAS,GAAG,IAAI,CAACd,MAAM,CAACe,IAAI,CAAC3B,qBAAqB,EACtD;MACE4B,KAAK,EAAE;KACR,CAAC;IACJF,SAAS,CAACG,WAAW,EAAE,CAACC,SAAS,CAAEC,MAAW,IAAI,CAClD,CAAC,CAAC;EACJ;EACAC,eAAeA,CAAA;IAEb,MAAMN,SAAS,GAAG,IAAI,CAACd,MAAM,CAACe,IAAI,CAAC1B,iBAAiB,EAClD;MACE2B,KAAK,EAAE;KACR,CAAC;IACJF,SAAS,CAACG,WAAW,EAAE,CAACC,SAAS,CAAEC,MAAW,IAAI,CAClD,CAAC,CAAC;EACJ;EAEAE,WAAWA,CAAA;IACT,IAAI,CAACf,WAAW,CAACgB,IAAI,CAAC;MACpBC,SAAS,EAAC;QACRpB,KAAK,EAAE,YAAY;QACnBC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfV,QAAQ,EAAE;OACX;MACD6B,UAAU,EAAE;QACVrB,KAAK,EAAE,gBAAgB;QACvBC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfV,QAAQ,EAAE;OACX;MACD8B,UAAU,EAAE;QACVtB,KAAK,EAAE,aAAa;QACpBC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfV,QAAQ,EAAE;OACX;MACD+B,QAAQ,EAAE;QACRvB,KAAK,EAAE,kBAAkB;QACzBC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfV,QAAQ,EAAE;OACX;MACDgC,OAAO,EAAE;QACPxB,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfV,QAAQ,EAAE;;KAEb,CAAC;IACF,IAAI,CAACJ,oBAAoB,EAAE;IAC3B,IAAI,CAACgB,WAAW,GAAG,KAAK;EAC1B;EACAqB,cAAcA,CAAA;IACZ,IAAI,CAAC1B,cAAc,CAACoB,IAAI,CAAC;MACvBO,UAAU,EAAC;QACT1B,KAAK,EAAE,aAAa;QACnBC,KAAK,EAAE,EAAE;QACRC,WAAW,EAAE;OAChB;MACDyB,aAAa,EAAC;QACX3B,KAAK,EAAE,gBAAgB;QACvBC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE;OACf;MACD0B,SAAS,EAAC;QACR5B,KAAK,EAAE,WAAW;QAClBC,KAAK,EAAE;OACR;MACD4B,QAAQ,EAAC;QACP7B,KAAK,EAAE,WAAW;QAClBC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE;OACd;MACD4B,IAAI,EAAC;QACH9B,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE;;KAEhB,CAAC;IACF,IAAI,CAACG,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACC,OAAO,GAAG,IAAI;EACrB;EACAyB,QAAQA,CAAA;IACN,IAAI,CAAChC,cAAc,CAACoB,IAAI,CAAC;MACvBO,UAAU,EAAC;QACT1B,KAAK,EAAE,aAAa;QACnBC,KAAK,EAAE,EAAE;QACRC,WAAW,EAAE;OAChB;MACDyB,aAAa,EAAC;QACX3B,KAAK,EAAE,gBAAgB;QACvBC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE;OACf;MACD0B,SAAS,EAAC;QACR5B,KAAK,EAAE,WAAW;QAClBC,KAAK,EAAE;OACR;MACD4B,QAAQ,EAAC;QACP7B,KAAK,EAAE,WAAW;QAClBC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE;OACd;MACD4B,IAAI,EAAC;QACH9B,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE;;KAEhB,CAAC;EAEJ;EACE8B,WAAWA,CAAA;IACT,IAAI,CAAClC,IAAI,GAAG,EAAE;IAChB,IAAI,CAACL,GAAG,GAAG,EAAE;IACb,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,QAAQ,GAAG,EAAE;IAElB,IAAI,CAACL,aAAa,CAAC2C,OAAO,CAAE5C,KAAK,IAAI;MACnCA,KAAK,CAACE,QAAQ,CAACU,KAAK,GAAG,EAAE;MACzBZ,KAAK,CAACI,GAAG,CAACQ,KAAK,GAAG,EAAE;MACpBZ,KAAK,CAACK,YAAY,CAACO,KAAK,GAAG,EAAE;MAC7BZ,KAAK,CAACM,QAAQ,CAACM,KAAK,GAAG,EAAE;IAC3B,CAAC,CAAC;IAEF,IAAI,CAACF,cAAc,CAACkC,OAAO,CAAE5C,KAAK,IAAI;MACpCA,KAAK,CAACqC,UAAU,CAACzB,KAAK,GAAG,EAAE;MAC3BZ,KAAK,CAACsC,aAAa,CAAC1B,KAAK,GAAG,EAAE;MAC9BZ,KAAK,CAACuC,SAAS,CAAC3B,KAAK,GAAG,IAAI;MAC5BZ,KAAK,CAACwC,QAAQ,CAAC5B,KAAK,GAAG,EAAE;MACzBZ,KAAK,CAACyC,IAAI,CAAC7B,KAAK,GAAG,EAAE;IACvB,CAAC,CAAC;EACJ;CACD;AA/LUiC,UAAA,EAARlD,KAAK,EAAE,C,0CAAW;AACVkD,UAAA,EAARlD,KAAK,EAAE,C,yCAAS;AACRkD,UAAA,EAARlD,KAAK,EAAE,C,kDAAkB;AACjBkD,UAAA,EAARlD,KAAK,EAAE,C,8CAAc;AAJXG,aAAa,GAAA+C,UAAA,EANzBnD,SAAS,CAAC;EACToD,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CAEnC,CAAC,C,EACWlD,aAAa,CAgMzB;SAhMYA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}